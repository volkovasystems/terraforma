{"version":3,"sources":["terraforma.js"],"names":["_","require","harden","gulp","fs","path","argv","changed","plumber","del","vinylPath","map","concat","rename","less","sass","cached","flatten","babel","parameta","util","uglify","cssnano","sourcemap","order","es2015Preset","reactPreset","terraforma","option","$gulp","task","process","cwd","global","earthJSONPath","resolve","ROOT_DIRECTORY","existsSync","template","appName","sourcePath","destinationPath","libraryPathList","scriptPathList","cloud","ground","water","mobile","cloneDeep","extend","property","test","JSON","stringify","writeFileSync","error","console","log","inspect","exit","src","pipe","file","callback","earthOption","parse","contents","toString","mode","$mode","ios","android","moon","split","TERRAFORM_MODE","MOBILE_MODE","APPLICATION_NAME","join","defaultLibraryPathList","union","libraryPath","initialLibraryPath","sourceLibraryPath","SOURCE_PATH","destinationLibraryPath","DESTINATION_PATH","negatedLibraryPath","sourceFontPath","destinationFontPath","negatedFontPath","destinationCSSPath","destinationStylePath","defaultImageFileFormatList","imageFilePathList","imageFileFormatList","imageFileFormat","destinationImagePath","isEmpty","destinationViewPath","destinationJSPath","destinationScriptPath","indexPath","LIBRARY_PATH_LIST","SOURCE_LIBRARY_PATH","dest","DESTINATION_LIBRARY_PATH","SOURCE_FONT_PATH","DESTINATION_FONT_PATH","NEGATED_LIBRARY_PATH","NEGATED_FONT_PATH","IMAGE_FILE_PATH_LIST","DESTINATION_IMAGE_PATH","DESTINATION_VIEW_PATH","optimizeMemory","DESTINATION_CSS_PATH","DESTINATION_STYLE_PATH","init","write","SCRIPT_PATH_LIST","presets","DESTINATION_JS_PATH","DESTINATION_SCRIPT_PATH","comments","INDEX_PATH","read","module","exports"],"mappings":"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","file":"terraforma.min.js","sourcesContent":["\"use strict\";\n\n/*:!\n\t@module-license:\n\t\tThe MIT License (MIT)\n\n\t\tCopyright (@c) 2015 Richeve Siodina Bebedor\n\t\t@email: richeve.bebedor@gmail.com\n\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\tin the Software without restriction, including without limitation the rights\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\tfurnished to do so, subject to the following conditions:\n\n\t\tThe above copyright notice and this permission notice shall be included in all\n\t\tcopies or substantial portions of the Software.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\tSOFTWARE.\n\t@end-module-license\n\t\n\t@module-configuration:\n\t\t{\n\t\t\t\"packageName\": \"terraforma\",\n\t\t\t\"fileName\": \"terraforma.js\",\n\t\t\t\"moduleName\": \"terraforma\",\n\t\t\t\"authorName\": \"Richeve S. Bebedor\",\n\t\t\t\"authorEMail\": \"richeve.bebedor@gmail.com\",\n\t\t\t\"repository\": \"git@github.com:volkovasystems/terraforma.git\",\n\t\t\t\"testCase\": \"terraforma-test.js\",\n\t\t\t\"isGlobal\": true\n\t\t}\n\t@end-module-configuration\n\n\t@module-documentation:\n\t\tThis is a straightforward mega function that configures\n\t\t\tyour basic gulp tasks towards a concise and specified architecture.\n\n\t\tIt has 4 basic options,\n\t\t\t1. cloud\n\t\t\t2. ground\n\t\t\t3. water\n\t\t\t4. moon\n\t@end-module-documentation\t\n*/\n\nvar _  = require( \"lodash\" );\nvar harden = require( \"harden\" );\nvar gulp = require( \"gulp\" );\nvar fs = require( \"fs\" );\nvar path = require( \"path\" );\nvar argv = require( \"yargs\" ).argv;\nvar changed = require( \"gulp-changed\" );\nvar plumber = require( \"gulp-plumber\" );\nvar del = require( \"del\" );\nvar vinylPath = require( \"vinyl-paths\" );\nvar map = require( \"map-stream\" );\nvar concat = require( \"gulp-concat\" );\nvar rename = require( \"gulp-rename\" );\nvar less = require( \"gulp-less\" );\nvar sass = require( \"gulp-sass\" );\nvar cached = require( \"gulp-cached\" );\nvar flatten = require( \"gulp-flatten\" );\nvar babel = require( \"gulp-babel\" );\nvar parameta = require( \"parameta\" );\nvar util = require( \"util\" );\nvar uglify = require( \"gulp-uglify\" );\nvar cssnano = require( \"gulp-cssnano\" );\nvar sourcemap = require( \"gulp-sourcemaps\" );\nvar order = require( \"gulp-order\" );\nvar es2015Preset = require( \"babel-preset-es2015\" );\nvar reactPreset = require( \"babel-preset-react\" );\n\nvar terraforma = function terraforma( option ){\n\t//: This will let you add tasks.\n\tgulp = option.$gulp || gulp;\n\n\tgulp.task( \"initialize\",\n\t\tfunction initializeTask( ){\n\t\t\tharden( \"ROOT_DIRECTORY\", process.cwd( ), global );\n\t\t\t\n\t\t\tvar earthJSONPath = path.resolve( ROOT_DIRECTORY, \"earth.json\" );\n\n\t\t\ttry{\n\t\t\t\tif( !fs.existsSync( earthJSONPath ) ){\n\t\t\t\t\tvar template = {\n\t\t\t\t\t\t\"appName\": \"app\",\n\t\t\t\t\t\t\"sourcePath\": \"client\",\n\t\t\t\t\t\t\"destinationPath\": \"build\",\n\t\t\t\t\t\t\"libraryPathList\": [ ],\n\t\t\t\t\t\t\"scriptPathList\": [ ],\n\t\t\t\t\t\t\"cloud\": {\n\t\t\t\t\t\t\t\"destinationPath\": \"deploy\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"ground\": {\n\t\t\t\t\t\t\t\"destinationPath\": \"stage\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"water\": { },\n\t\t\t\t\t\t\"mobile\": { }\n\t\t\t\t\t};\n\n\t\t\t\t\ttemplate = _.cloneDeep( _.extend( template, option ) );\n\n\t\t\t\t\tfor( var property in template ){\n\t\t\t\t\t\tif( /^\\$/.test( property ) ){\n\t\t\t\t\t\t\tdelete template[ property ]; \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttemplate = JSON.stringify( template, null, \"\\t\" );\n\n\t\t\t\t\tfs.writeFileSync( earthJSONPath, template, \"utf8\" );\n\t\t\t\t}\n\n\t\t\t}catch( error ){\n\t\t\t\tconsole.log( \"possible error during earth.json template transfer\",\n\t\t\t\t\tutil.inspect( error ) );\n\n\t\t\t\tif( !fs.existsSync( earthJSONPath ) ){\n\t\t\t\t\tconsole.log( \"earth.json is not created properly, terraforma will crumble\" );\n\n\t\t\t\t\tprocess.exit( 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn gulp\n\t\t\t\t.src( earthJSONPath )\n\t\t\t\t\n\t\t\t\t.pipe( map( function attachTemplate( file, callback ){\n\t\t\t\t\t//: Prioritize given parameter options over configuration.\n\t\t\t\t\tvar earthOption = JSON.parse( file.contents.toString( \"utf8\" ) || \"{ }\" );\n\n\t\t\t\t\toption = _.extend( earthOption, option || { } );\n\t\t\t\t\t\n\t\t\t\t\tharden( \"OPTION\", option, global );\n\n\t\t\t\t\t/*:\n\t\t\t\t\t\tThe name of the application appended to the created folder name.\n\t\t\t\t\t*/\n\t\t\t\t\tharden( \"APPLICATION_NAME\", \n\t\t\t\t\t\targv.appName || option.appName || \"app\", \n\t\t\t\t\t\tglobal );\n\n\t\t\t\t\t/*:\n\t\t\t\t\t\tTerraform mode are simple modes that transform the app.\n\t\t\t\t\t\t1. cloud - production\n\t\t\t\t\t\t\t-this will create a deploy folder\n\t\t\t\t\t\t\n\t\t\t\t\t\t2. ground - testing (development/staging)\n\t\t\t\t\t\t\t-this will create a stage folder\n\n\t\t\t\t\t\t3. water - local (default)\n\t\t\t\t\t\t\t-this will create a build folder\n\n\t\t\t\t\t\t4. moon - mobile\n\t\t\t\t\t\t\ta. moon:ios\n\t\t\t\t\t\t\t\t-build for ios devices\n\t\t\t\t\t\t\t\t-creates an ios folder\n\n\t\t\t\t\t\t\tb. moon:android\n\t\t\t\t\t\t\t\t-build for android devices\n\t\t\t\t\t\t\t\t-creates an android folder\n\n\t\t\t\t\t\t\tc. moon:web (default)\n\t\t\t\t\t\t\t\t-build as a web app for mobile devices\n\t\t\t\t\t\t\t\t-creates a mobile folder\n\t\t\t\t\t*/\n\t\t\t\t\tvar mode = argv.mode || option.mode || option.$mode;\n\n\t\t\t\t\tif( argv.cloud ){\n\t\t\t\t\t\tmode = \"cloud\";\n\t\t\t\t\t\n\t\t\t\t\t}else if( argv.ground ){\n\t\t\t\t\t\tmode = \"ground\";\n\t\t\t\t\t\n\t\t\t\t\t}else if( argv.ios ){\n\t\t\t\t\t\tmode = \"moon:ios\";\n\t\t\t\t\t\n\t\t\t\t\t}else if( argv.android ){\n\t\t\t\t\t\tmode = \"moon:android\";\n\t\t\t\t\t\n\t\t\t\t\t}else if( argv.moon ){\n\t\t\t\t\t\tmode = \"moon\";\n\t\t\t\t\t\n\t\t\t\t\t}else if( !mode ){\n\t\t\t\t\t\tmode = \"water\";\n\t\t\t\t\t}\n\n\t\t\t\t\tharden( \"TERRAFORM_MODE\", mode.split( \":\" )[ 0 ], global );\n\n\t\t\t\t\tif( (/^moon\\:/).test( mode ) ){\n\t\t\t\t\t\tharden( \"MOBILE_MODE\", mode.split( \":\" )[ 1 ], global );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( !option.destinationPath ){\n\t\t\t\t\t\tif( TERRAFORM_MODE == \"cloud\" ){\n\t\t\t\t\t\t\toption.destinationPath = \"deploy\";\n\t\t\t\t\t\t\n\t\t\t\t\t\t}else if( TERRAFORM_MODE == \"ground\" ){\n\t\t\t\t\t\t\toption.destinationPath = \"stage\";\n\t\t\t\t\t\t\n\t\t\t\t\t\t}else if( TERRAFORM_MODE == \"moon\" &&\n\t\t\t\t\t\t\t!global.MOBILE_MODE )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toption.destinationPath = \"mobile\"\n\t\t\t\t\t\t\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\toption.destinationPath = \"build\";\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\n\t\t\t\t\tharden( \"SOURCE_PATH\", \n\t\t\t\t\t\tpath.resolve( ROOT_DIRECTORY, \n\t\t\t\t\t\t\targv.sourcePath || \n\t\t\t\t\t\t\toption[ TERRAFORM_MODE ].sourcePath ||\n\t\t\t\t\t\t\toption.sourcePath || \n\t\t\t\t\t\t\t\"client\" ),\n\t\t\t\t\t\tglobal );\n\n\t\t\t\t\tharden( \"DESTINATION_PATH\",\n\t\t\t\t\t\tpath.resolve( ROOT_DIRECTORY,\n\t\t\t\t\t\t\t[ \n\t\t\t\t\t\t\t\t( argv.destinationPath || \n\t\t\t\t\t\t\t\t( global.MOBILE_MODE? MOBILE_MODE : \"\" ) ||\n\t\t\t\t\t\t\t\toption[ TERRAFORM_MODE ].destinationPath ||\n\t\t\t\t\t\t\t\toption.destinationPath ),\n\t\t\t\t\t\t\t\tAPPLICATION_NAME\n\t\t\t\t\t\t\t].join( \"-\" ) ),\n\t\t\t\t\t\tglobal );\n\t\t\t\t\t\n\t\t\t\t\tvar defaultLibraryPathList = [\n\t\t\t\t\t\t\"bower_components/*/*.css\",\n\t\t\t\t\t\t\"bower_components/*/*.map\",\n\t\t\t\t\t\t\"bower_components/*/*.js\",\n\t\t\t\t\t\t\"bower_components/*/*.eot\",\n\t\t\t\t\t\t\"bower_components/*/*.svg\",\n\t\t\t\t\t\t\"bower_components/*/*.ttf\",\n\t\t\t\t\t\t\"bower_components/*/*.woff\",\n\n\t\t\t\t\t\t\"bower_components/*/dist/**/*.eot\",\n\t\t\t\t\t\t\"bower_components/*/dist/**/*.svg\",\n\t\t\t\t\t\t\"bower_components/*/dist/**/*.ttf\",\n\t\t\t\t\t\t\"bower_components/*/dist/**/*.woff\",\n\t\t\t\t\t\t\"bower_components/*/dist/**/*.css\",\n\t\t\t\t\t\t\"bower_components/*/dist/**/*.map\",\n\t\t\t\t\t\t\"bower_components/*/dist/**/*.js\",\n\n\t\t\t\t\t\t\"bower_components/*/lib/**/*.js\",\n\n\t\t\t\t\t\t\"bower_components/*/build/**/*.js\",\n\t\t\t\t\t\t\"bower_components/*/build/**/*.css\",\n\n\t\t\t\t\t\t\"bower_components/*/css/*.css\",\n\n\t\t\t\t\t\t\"bower_components/*/fonts/*.eot\",\n\t\t\t\t\t\t\"bower_components/*/fonts/*.svg\",\n\t\t\t\t\t\t\"bower_components/*/fonts/*.ttf\",\n\t\t\t\t\t\t\"bower_components/*/fonts/*.woff\"\n\t\t\t\t\t];\n\n\t\t\t\t\t//: The library path configuration for library transfer.\n\t\t\t\t\tvar libraryPathList = _.union( defaultLibraryPathList, option.libraryPathList )\n\t\t\t\t\t\t.map( function onEachLibraryPath( libraryPath ){\n\t\t\t\t\t\t\treturn path.resolve( ROOT_DIRECTORY, libraryPath );\n\t\t\t\t\t\t} );\n\t\t\t\t\tharden( \"LIBRARY_PATH_LIST\", libraryPathList, global );\n\n\t\t\t\t\tvar initialLibraryPath = path.join( ROOT_DIRECTORY, \"bower_components\" );\n\t\t\t\t\tharden( \"INITIAL_LIBRARY_PATH\", initialLibraryPath, global );\n\n\t\t\t\t\tvar sourceLibraryPath = path.join( SOURCE_PATH, \"library\" );\n\t\t\t\t\tharden( \"SOURCE_LIBRARY_PATH\", sourceLibraryPath, global );\n\n\t\t\t\t\tvar destinationLibraryPath = path.join( DESTINATION_PATH, \"library\" );\n\t\t\t\t\tharden( \"DESTINATION_LIBRARY_PATH\", destinationLibraryPath, global );\n\n\t\t\t\t\tvar negatedLibraryPath = \"!\" + path.resolve( SOURCE_PATH, \"library/**/*.*\" );\n\t\t\t\t\tharden( \"NEGATED_LIBRARY_PATH\", negatedLibraryPath, global );\n\n\t\t\t\t\tvar sourceFontPath = path.resolve( SOURCE_PATH, \"fonts\" );\n\t\t\t\t\tharden( \"SOURCE_FONT_PATH\", sourceFontPath, global );\n\n\t\t\t\t\tvar destinationFontPath = path.resolve( DESTINATION_PATH, \"fonts\" );\n\t\t\t\t\tharden( \"DESTINATION_FONT_PATH\", destinationFontPath, global );\n\n\t\t\t\t\tvar negatedFontPath = \"!\" + path.resolve( SOURCE_PATH, \"fonts/**/*.*\" );\n\t\t\t\t\tharden( \"NEGATED_FONT_PATH\", negatedFontPath, global );\n\n\t\t\t\t\tvar destinationCSSPath = path.resolve( DESTINATION_PATH, \"css\" );\n\t\t\t\t\tharden( \"DESTINATION_CSS_PATH\", destinationCSSPath, global );\n\n\t\t\t\t\tvar destinationStylePath = path.resolve( DESTINATION_PATH, \"style\" );\n\t\t\t\t\tharden( \"DESTINATION_STYLE_PATH\", destinationStylePath, global );\n\n\t\t\t\t\t/*:\n\t\t\t\t\t\tWe will have default support for the following file formats.\n\t\t\t\t\t*/\n\t\t\t\t\tvar defaultImageFileFormatList = [\n\t\t\t\t\t\t\"jpg\",\n\t\t\t\t\t\t\"jpeg\",\n\t\t\t\t\t\t\"png\",\n\t\t\t\t\t\t\"gif\",\n\t\t\t\t\t\t\"svg\",\n\t\t\t\t\t\t\"ico\"\n\t\t\t\t\t];\n\n\t\t\t\t\tvar imageFilePathList = _.union( defaultImageFileFormatList, \n\t\t\t\t\t\t\toption.imageFileFormatList || [ ] )\n\t\t\t\t\t\t.map( function onEachImageFileFormat( imageFileFormat ){\n\t\t\t\t\t\t\treturn path.resolve( SOURCE_PATH, \"**/*.\" + imageFileFormat );\n\t\t\t\t\t\t} );\n\t\t\t\t\tharden( \"IMAGE_FILE_PATH_LIST\", imageFilePathList, global );\n\n\t\t\t\t\tvar destinationImagePath = path.resolve( DESTINATION_PATH, \"image\" );\n\t\t\t\t\tharden( \"DESTINATION_IMAGE_PATH\", destinationImagePath, global );\n\n\t\t\t\t\tvar scriptPathList = option.scriptPathList;\n\t\t\t\t\tif( _.isEmpty( scriptPathList ) ){\n\t\t\t\t\t\tscriptPathList = [ \n\t\t\t\t\t\t\tpath.resolve( SOURCE_PATH, \"**/*.js\" ),\n\t\t\t\t\t\t\tpath.resolve( SOURCE_PATH, \"**/*.jsx\" )\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\tharden( \"ORDERED_SCRIPT\", false, global );\n\t\t\t\t\t\n\t\t\t\t\t}else{\n\t\t\t\t\t\tharden( \"ORDERED_SCRIPT\", true, global );\n\t\t\t\t\t}\n\n\t\t\t\t\tvar destinationViewPath = path.resolve( DESTINATION_PATH, \"view\" );\n\t\t\t\t\tharden( \"DESTINATION_VIEW_PATH\", destinationViewPath, global );\n\n\t\t\t\t\tharden( \"SCRIPT_PATH_LIST\", scriptPathList, global );\n\n\t\t\t\t\tvar destinationJSPath = path.resolve( DESTINATION_PATH, \"js\" );\n\t\t\t\t\tharden( \"DESTINATION_JS_PATH\", destinationJSPath, global );\n\n\t\t\t\t\tvar destinationScriptPath = path.resolve( DESTINATION_PATH, \"script\" );\n\t\t\t\t\tharden( \"DESTINATION_SCRIPT_PATH\", destinationScriptPath, global );\n\n\t\t\t\t\tif( option.indexPath ){\n\t\t\t\t\t\tvar indexPath = path.resolve( ROOT_DIRECTORY, option.indexPath );\n\t\t\t\t\t\tharden( \"INDEX_PATH\", indexPath, global );\n\t\t\t\t\t\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar indexPath = path.resolve( ROOT_DIRECTORY, \"client/index.html\" );\n\t\t\t\t\t\tharden( \"INDEX_PATH\", indexPath, global );\t\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback( null, file );\n\t\t\t\t} ) );\n\t\t} );\n\n\tgulp.task( \"copy-library\",\n\t\t[ \n\t\t\t\"initialize\" \n\t\t],\n\t\tfunction copyTask( ){\n\t\t\treturn gulp\n\t\t\t\t.src( LIBRARY_PATH_LIST )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\t\t\t\t\n\t\t\t\t.pipe( flatten( ) )\n\t\t\t\t\n\t\t\t\t.pipe( changed( SOURCE_LIBRARY_PATH ) )\n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( SOURCE_LIBRARY_PATH ) );\n\t\t} );\n\n\tgulp.task( \"build-library\",\n\t\t[ \n\t\t\t\"initialize\", \n\t\t\t\"copy-library\" \n\t\t],\n\t\tfunction buildLibrary( ){\n\t\t\treturn gulp\n\t\t\t\t.src( path.resolve( SOURCE_LIBRARY_PATH, \"*.*\" ) )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\t\t\t\t\n\t\t\t\t.pipe( changed( DESTINATION_LIBRARY_PATH ) )\n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( DESTINATION_LIBRARY_PATH ) )\n\t\t} );\n\n\tgulp.task( \"build-font\",\n\t\t[ \n\t\t\t\"initialize\",\n\t\t\t\"copy-library\" \n\t\t],\n\t\tfunction buildTask( ){\n\t\t\tvar stream = gulp\n\t\t\t\t.src( [\n\t\t\t\t\tpath.resolve( SOURCE_LIBRARY_PATH, \"*.eot\" ),\n\t\t\t\t\tpath.resolve( SOURCE_LIBRARY_PATH, \"*.svg\" ),\n\t\t\t\t\tpath.resolve( SOURCE_LIBRARY_PATH, \"*.ttf\" ),\n\t\t\t\t\tpath.resolve( SOURCE_LIBRARY_PATH, \"*.woff\" )\n\t\t\t\t] )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\t\t\t\t\n\t\t\t\t.pipe( changed( SOURCE_FONT_PATH ) )\n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( SOURCE_FONT_PATH ) )\n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( DESTINATION_FONT_PATH ) );\n\t\t} );\n\n\tgulp.task( \"build-image\",\n\t\t[ \n\t\t\t\"initialize\"\n\t\t],\n\t\tfunction buildImage( ){\n\t\t\treturn gulp\n\t\t\t\t.src( _.union( [\n\t\t\t\t\t\tNEGATED_LIBRARY_PATH,\n\t\t\t\t\t\tNEGATED_FONT_PATH\n\t\t\t\t\t], IMAGE_FILE_PATH_LIST ) )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t.pipe( flatten( ) )\n\t\t\t\t\n\t\t\t\t.pipe( changed( DESTINATION_IMAGE_PATH ) ) \n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( DESTINATION_IMAGE_PATH ) )\n\t\t} );\n\n\tgulp.task( \"build-view\",\n\t\t[ \n\t\t\t\"initialize\"\n\t\t],\n\t\tfunction buildImage( ){\n\t\t\treturn gulp\n\t\t\t\t.src( [\n\t\t\t\t\tNEGATED_LIBRARY_PATH,\n\t\t\t\t\tpath.resolve( SOURCE_PATH, \"**/*.html\" )\n\t\t\t\t] )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t.pipe( flatten( ) )\n\t\t\t\t\n\t\t\t\t.pipe( changed( DESTINATION_VIEW_PATH ) ) \n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( DESTINATION_VIEW_PATH ) )\n\t\t} );\n\n\tgulp.task( \"build-sass\",\n\t\t[ \n\t\t\t\"initialize\"\n\t\t],\n\t\tfunction buildSASS( ){\n\t\t\treturn gulp\n\t\t\t\t.src( [\n\t\t\t\t\tpath.resolve( SOURCE_PATH, \"**/*.scss\" ),\n\t\t\t\t\tNEGATED_LIBRARY_PATH\n\t\t\t\t] )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t.pipe( flatten( ) )\n\t\t\t\t\n\t\t\t\t.pipe( cached( \"sass:build\", { \"optimizeMemory\": true } ) )\n\t\t\t\t\n\t\t\t\t.pipe( sass( ) )\n\t\t\t\t\n\t\t\t\t.pipe( rename( [ APPLICATION_NAME, \"sass.css\" ].join( \".\" ) ) )\n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( DESTINATION_CSS_PATH ) );\n\t\t} );\n\n\tgulp.task( \"build-less\",\n\t\t[ \n\t\t\t\"initialize\"\n\t\t],\n\t\tfunction buildLESS( ){\n\t\t\treturn gulp\n\t\t\t\t.src( [\n\t\t\t\t\tpath.resolve( SOURCE_PATH, \"**/*.less\" ),\n\t\t\t\t\tNEGATED_LIBRARY_PATH\n\t\t\t\t] )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t.pipe( flatten( ) )\n\t\t\t\t\n\t\t\t\t.pipe( cached( \"less:build\", { \"optimizeMemory\": true } ) )\n\t\t\t\t\n\t\t\t\t.pipe( less( ) )\n\t\t\t\t\n\t\t\t\t.pipe( rename( [ APPLICATION_NAME, \"less.css\" ].join( \".\" ) ) )\n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( DESTINATION_CSS_PATH ) );\n\t\t} );\n\n\tgulp.task( \"build-css\",\n\t\t[ \n\t\t\t\"initialize\" \n\t\t],\n\t\tfunction buildCSS( ){\n\t\t\treturn gulp\n\t\t\t\t.src( [\n\t\t\t\t\tpath.resolve( SOURCE_PATH, \"**/*.css\" ),\n\t\t\t\t\tNEGATED_LIBRARY_PATH\n\t\t\t\t] )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t.pipe( flatten( ) )\n\t\t\t\t\n\t\t\t\t.pipe( cached( \"css:build\", { \"optimizeMemory\": true } ) )\n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( DESTINATION_CSS_PATH ) );\n\t\t} );\n\n\tgulp.task( \"build-style\",\n\t\t[ \n\t\t\t\"initialize\",\n\t\t\t\"build-sass\",\n\t\t\t\"build-less\",\n\t\t\t\"build-css\"\n\t\t], \n\t\tfunction buildStyle( ){\n\t\t\tif( TERRAFORM_MODE == \"cloud\" ){\n\t\t\t\treturn gulp\n\t\t\t\t\t.src( path.resolve( DESTINATION_CSS_PATH, \"*.css\" ) )\n\t\t\t\t\t\n\t\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t\t.pipe( order( [\n\t\t\t\t\t\t\"**/*.sass.css\",\n\t\t\t\t\t\t\"**/*.less.css\",\n\t\t\t\t\t\t\"**/*.css\"\n\t\t\t\t\t] ) )\n\t\t\t\t\t\n\t\t\t\t\t.pipe( concat( [ APPLICATION_NAME, \"css\" ].join( \".\" ) ) )\n\n\t\t\t\t\t.pipe( gulp.dest( DESTINATION_STYLE_PATH ) )\n\n\t\t\t\t\t.pipe( sourcemap.init( ) )\n\t\t\t\t\t\n\t\t\t\t\t.pipe( cssnano( ) )\n\n\t\t\t\t\t.pipe( sourcemap.write( ) )\n\n\t\t\t\t\t.pipe( rename( [ APPLICATION_NAME, \"min.css\" ].join( \".\" ) ) )\n\t\t\t\t\t\n\t\t\t\t\t.pipe( changed( DESTINATION_STYLE_PATH ) )\n\n\t\t\t\t\t.pipe( gulp.dest( DESTINATION_STYLE_PATH ) );\n\t\t\t\n\t\t\t}else{\n\t\t\t\treturn gulp\n\t\t\t\t\t.src( path.resolve( DESTINATION_CSS_PATH, \"*.css\" ) )\n\t\t\t\t\t\n\t\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t\t.pipe( order( [\n\t\t\t\t\t\t\"**/*.sass.css\",\n\t\t\t\t\t\t\"**/*.less.css\",\n\t\t\t\t\t\t\"**/*.css\"\n\t\t\t\t\t] ) )\n\t\t\t\t\t\n\t\t\t\t\t.pipe( concat( [ APPLICATION_NAME, \"css\" ].join( \".\" ) ) )\n\t\t\t\t\t\n\t\t\t\t\t.pipe( changed( DESTINATION_STYLE_PATH ) )\n\t\t\t\t\t\n\t\t\t\t\t.pipe( gulp.dest( DESTINATION_STYLE_PATH ) );\n\t\t\t}\n\t\t} );\n\t\n\tgulp.task( \"compile-script\",\n\t\t[ \n\t\t\t\"initialize\"\n\t\t],\n\t\tfunction compileScript( ){\n\t\t\treturn gulp\n\t\t\t\t.src( _.union( [\n\t\t\t\t\t\tNEGATED_LIBRARY_PATH\n\t\t\t\t\t], SCRIPT_PATH_LIST ) )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t.pipe( flatten( ) )\n\t\t\t\t\n\t\t\t\t.pipe( cached( \"script:compile\", { \"optimizeMemory\": true } ) )\n\t\t\t\t\n\t\t\t\t/*.pipe( map( function attachTemplate( file, callback ){\n\t\t\t\t\tvar fileContent = file.contents.toString( \"utf8\" );\n\n\t\t\t\t\tfile.contents = new Buffer( fileContent );\n\n\t\t\t\t\tcallback( null, file );\n\t\t\t\t} ) )\n\t\t\t\t.pipe( map( function attachSubTemplate( file, callback ){\n\t\t\t\t\tvar fileContent = file.contents.toString( \"utf8\" );\n\n\t\t\t\t\t\n\t\t\t\t\tfile.contents = new Buffer( fileContent );\n\n\t\t\t\t\tcallback( null, file );\n\t\t\t\t} ) )*/\n\t\t\t\t\n\t\t\t\t.pipe( babel( {\n\t\t\t\t\t\"presets\": [ es2015Preset ]\n\t\t\t\t} ) )\n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( DESTINATION_JS_PATH ) );\n\t\t} );\n\n\t//: All react files should be in jsx.\n\tgulp.task( \"compile-react\",\n\t\t[ \n\t\t\t\"initialize\"\n\t\t],\n\t\tfunction compileReact( ){\n\t\t\treturn gulp\n\t\t\t\t.src( [\n\t\t\t\t\tNEGATED_LIBRARY_PATH,\n\t\t\t\t\tpath.resolve( SOURCE_PATH, \"**/*.jsx\" )\n\t\t\t\t] )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t.pipe( flatten( ) )\n\t\t\t\t\n\t\t\t\t.pipe( cached( \"script:compile\", { \"optimizeMemory\": true } ) )\n\t\t\t\t\n\t\t\t\t/*.pipe( map( function attachTemplate( file, callback ){\n\t\t\t\t\tvar fileContent = file.contents.toString( \"utf8\" );\n\n\t\t\t\t\tvar templateList = parameta( fileContent ).template || [ ];\n\t\t\t\t\tif( templateList.length > 1 ){\n\t\t\t\t\t\ttemplateList.forEach( function onEachTemplate( template ){\n\t\t\t\t\t\t\tvar templatePath = path.resolve( SOURCE_PATH, template.execute( ) );\n\n\t\t\t\t\t\t\tif( fs.existsSync( templatePath ) ){\n\t\t\t\t\t\t\t\tvar templateContent = fs.readFileSync( templatePath, \"utf8\" );\n\n\t\t\t\t\t\t\t\ttemplate\n\t\t\t\t\t\t\t\t\t.change( templateContent )\n\t\t\t\t\t\t\t\t\t.persist( );\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tconsole.log( \"template\", templatePath, \"does not exists\" );\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\tfileContent = templateList.raw;\n\n\t\t\t\t\tfile.contents = new Buffer( fileContent );\n\n\t\t\t\t\tcallback( null, file );\n\t\t\t\t} ) )*/\n\t\t\t\t\n\t\t\t\t.pipe( babel( {\n\t\t\t\t\t\"presets\": [ reactPreset ]\n\t\t\t\t} ) )\n\t\t\t\t\n\t\t\t\t.pipe( gulp.dest( DESTINATION_JS_PATH ) );\n\t\t} );\n\n\tgulp.task( \"build-script\",\n\t\t[ \n\t\t\t\"initialize\", \n\t\t\t\"compile-react\", \n\t\t\t\"compile-script\" \n\t\t],\n\t\tfunction buildScript( ){\n\t\t\tif( TERRAFORM_MODE == \"cloud\" ){\n\t\t\t\treturn gulp\n\t\t\t\t\t.src( path.resolve( DESTINATION_JS_PATH, \"*.js\" ) )\n\n\t\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t\t.pipe( concat( [ APPLICATION_NAME, \"js\" ].join( \".\" ) ) )\n\n\t\t\t\t\t.pipe( gulp.dest( DESTINATION_SCRIPT_PATH ) )\n\n\t\t\t\t\t.pipe( sourcemap.init( ) )\n\n\t\t\t\t\t.pipe( uglify( {\n\t\t\t\t\t\t\"comments\": ( /\\/\\/\\:\\!|\\/\\*\\:\\!/ )\n\t\t\t\t\t} ) )\n\n\t\t\t\t\t.pipe( sourcemap.write( ) )\n\n\t\t\t\t\t.pipe( rename( [ APPLICATION_NAME, \"min.js\" ].join( \".\" ) ) )\n\n\t\t\t\t\t.pipe( changed( DESTINATION_SCRIPT_PATH ) )\n\n\t\t\t\t\t.pipe( gulp.dest( DESTINATION_SCRIPT_PATH ) )\n\n\t\t\t}else{\n\t\t\t\treturn gulp\n\t\t\t\t\t.src( path.resolve( DESTINATION_JS_PATH, \"*.js\" ) )\n\n\t\t\t\t\t.pipe( plumber( ) )\n\n\t\t\t\t\t.pipe( concat( [ APPLICATION_NAME, \"js\" ].join( \".\" ) ) )\n\n\t\t\t\t\t.pipe( gulp.dest( DESTINATION_SCRIPT_PATH ) );\n\t\t\t}\t\n\t\t} );\n\n\tgulp.task( \"build-index\",\n\t\t[ \n\t\t\t\"initialize\",\n\t\t\t\n\t\t\t\"build-library\",\n\t\t\t\"build-font\",\n\t\t\t\"build-image\",\n\n\t\t\t\"build-style\",\n\t\t\t\n\t\t\t\"build-script\"\n\t\t],\n\t\tfunction buildIndex( ){\n\t\t\treturn gulp\n\t\t\t\t.src( INDEX_PATH )\n\n\t\t\t\t/*.pipe( map( function attachTemplate( file, callback ){\n\t\t\t\t\tvar fileContent = file.contents.toString( \"utf8\" );\n\n\t\t\t\t\tfile.contents = new Buffer( fileContent );\n\n\t\t\t\t\tcallback( null, file );\n\t\t\t\t} ) )*/\t\t\t\t\n\n\t\t\t\t.pipe( gulp.dest( path.resolve( DESTINATION_PATH ) ) );\t\t\t\t\t\t\n\t\t} );\n\n\tgulp.task( \"build\", [\n\t\t\"initialize\",\n\t\t\n\t\t\"copy-library\",\n\t\t\"build-library\",\n\t\t\"build-font\",\n\t\t\n\t\t\"build-image\",\n\n\t\t\"build-view\",\n\t\t\n\t\t\"build-sass\",\n\t\t\"build-less\",\n\t\t\"build-css\",\n\t\t\"build-style\",\n\t\t\n\t\t\"compile-react\",\n\t\t\"compile-script\",\n\t\t\"build-script\",\n\t\t\n\t\t\"build-index\"\n\t] );\n\n\t//: This will clean the library at the source only.\n\tgulp.task( \"clean-library\",\n\t\t[ \n\t\t\t\"initialize\"\n\t\t],\n\t\tfunction cleanLibrary( ){\n\t\t\treturn gulp\n\t\t\t\t.src( SOURCE_LIBRARY_PATH, { \"read\": false } )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\t\t\t\t\n\t\t\t\t.pipe( vinylPath( del ) );\n\t\t} );\n\n\tgulp.task( \"clean-font\",\n\t\t[ \n\t\t\t\"initialize\"\n\t\t],\n\t\tfunction cleanFont( ){\n\t\t\treturn gulp\n\t\t\t\t.src( SOURCE_FONT_PATH, { \"read\": false } )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\t\t\t\t\n\t\t\t\t.pipe( vinylPath( del ) );\n\t\t} );\n\n\t//: This will delete everything from the build directory\n\tgulp.task( \"clean-build\",\n\t\t[ \n\t\t\t\"initialize\"\n\t\t],\n\t\tfunction cleanBuild( ){\n\t\t\treturn gulp\n\t\t\t\t.src( DESTINATION_PATH, { \"read\": false } )\n\t\t\t\t\n\t\t\t\t.pipe( plumber( ) )\n\t\t\t\t\n\t\t\t\t.pipe( vinylPath( del ) );\n\t\t} );\n\n\tgulp.task( \"clean\", [\n\t\t\"initialize\",\n\t\t\"clean-library\",\n\t\t\"clean-font\",\n\t\t\"clean-build\"\n\t] );\n\n\tgulp.task( \"default\", [\n\t\t\"initialize\",\n\t\t\"clean\",\n\t\t\"build\"\n\t] );\n\n\treturn gulp;\n};\n\nmodule.exports = terraforma;\n"],"sourceRoot":"/source/"}